@using System.Security.Claims;
@using NetCafeUCN.MVC.Models.DTO;
@model BookingGamingStationViewModel;

@section SeatBookingStyles {
    <link href="@Url.Content("~/css/SeatBooking.css")" rel="stylesheet" type="text/css" />
}

@{
    ViewData["Title"] = "Booking";
}

<h1>Book en computer</h1>


<hr />
<div class="row" style="max-height: 400px">
    <div class="col">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @if (Context.User.Identity.IsAuthenticated)
            {
                <div class="form-group">
                    <label class="control-label">Telefon</label>
                    <input asp-for="PhoneNo" class="form-control" id="PhoneNo" maxlength="8" value="@Context.User.Claims.FirstOrDefault(claim => claim.Type == ClaimTypes.MobilePhone)?.Value" />
                    <span asp-validation-for="PhoneNo" class="text-danger"></span>
                </div>
            }
            else
            {
                <div class="form-group">
                    <label class="control-label">Telefon</label>
                    <input asp-for="PhoneNo" class="form-control" id="PhoneNo" maxlength="8" />
                    <span asp-validation-for="PhoneNo" class="text-danger"></span>
                </div>
            }
           
            <div class="form-group">
                <label class="control-label">Dato</label>
                <input asp-for="StartDate" type="date" class="form-control" id="StartDate" value="@string.Format("{0:yyyy-MM-dd}", DateTime.Now)" min="@string.Format("{0:yyyy-MM-dd}", DateTime.Now)" />
                <span asp-validation-for="StartDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="control-label">Start tid:</label>
                <select id="StartTime" class="form-control" asp-for="StartTime">
                    <option value="">--Vælg tid--</option>
                    <option value="09:00">09:00</option>
                    <option value="09:30">09:30</option>
                    <option value="10:00">10:00</option>
                    <option value="10:30">10:30</option>
                    <option value="11:00">11:00</option>
                    <option value="11:30">11:30</option>
                    <option value="12:00">12:00</option>
                    <option value="12:30">12:30</option>
                    <option value="13:00">13:00</option>
                    <option value="13:30">13:30</option>
                    <option value="14:00">14:00</option>
                    <option value="14:30">14:30</option>
                    <option value="15:00">15:00</option>
                    <option value="15:30">15:30</option>
                    <option value="16:00">16:00</option>
                    <option value="16:30">16:30</option>
                    <option value="17:00">17:00</option>
                    <option value="17:30">17:30</option>
                    <option value="18:00">18:00</option>
                    <option value="18:30">18:30</option>
                    <option value="19:00">19:00</option>
                    <option value="19:30">19:30</option>
                    <option value="20:00">20:00</option>
                    <option value="20:30">20:30</option>
                    <option value="21:00">21:00</option>
                    <option value="21:30">21:30</option>
                    <option value="22:00">22:00</option>
                    <option value="22:30">22:30</option>
                    <option value="23:00">23:00</option>
                    <option value="23:30">23:30</option>
                </select>
            </div>

            <div class="form-group">
                <div class="slider" style="margin-top: 10px;">
                    <input type="range" id="EndTime" min="0.5" max="8" value="0.5"
                           step="0.5" list="volsettings" oninput="rangeValue.innerText = this.value" asp-for="EndTime">
                    <p style="margin: 0;">Antal valgte timer:</p>
                    <p id="rangeValue">0.5</p>
                </div>
            </div>

            <div class="col-lg" style="margin-bottom: 20px;">
                <h5>Vælg din plads her</h5>
                @if (Model.GamingStations != null)
                {
                    <div class="seats-container">
                        <ol>
                            <li class="row">
                                <ol class="seats">
                                    @for (int i = 0; i < Model.GamingStations.Count(); i++)
                                    {
                                        <li class="seat">
                                            <input type="checkbox" disabled="@Model.GamingStations[i].Booked" id="@Model.GamingStations[i].SeatNumber" checked="@Model.GamingStations[i].isChecked" onclick="!@Model.GamingStations[i].isChecked.ToString().ToLower()" asp-for="@Model.GamingStations[i].isChecked" />
                                            <label class="seatLabel" for="@Model.GamingStations[i].SeatNumber">@Model.GamingStations[i].SeatNumber</label>
                                        </li>
                                    }

                                    @*@foreach (GamingStationDto item in Model.GamingStations)
                                    {
                                        <li class="seat">
                                            <input type="checkbox" disabled="@item.Booked" id="@item.SeatNumber" value="@item.SeatNumber" checked="@item.isChecked" onclick="getValue(this.value)" />
                                            <label class="seatLabel" for="@item.SeatNumber">@item.SeatNumber</label>
                                        </li>
                                    }*@
                                </ol>
                            </li>
                        </ol>
                    </div>
                }
                else
                {
                    <p>Ingen gamingstations tilgængelige</p>
                }
            </div>

            <div class="form-group" style="margin-bottom: 5px">
                <input type="submit" value="Create" class="btn btn-primary" id="createBooking" onclick="submitBookingLines()" />
            </div>
        </form>
        <div>
            <a asp-action="Index">Back to List</a>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <script>
        const stations = [];
        let count = 0;
        @foreach (GamingStationDto item in Model.GamingStations)
        {
            @:stations.push({ SeatNumber: "@item.SeatNumber", Description: "@item.Description", Booked: "@item.Booked", isChecked: "@item.isChecked" });
        }
        function getValue(value) {
            stations.forEach(function (item) {
                if (item.SeatNumber == value) {
                    item.isChecked = item.isChecked == "False" ? "True" : "False";
                }
            });
        }

        //function submitBookingLines() {
        //    var data = JSON.stringify(stations);
        //    console.log("submit")
        //    $.ajax({
        //        type: "POST",
        //        url: "BookingController/AddBooking",
        //        data: data,
        //        success: function(response) {
        //            console.log("Success")
        //        }
        //    })
        //    return true;
        //}

        //$(document).ready(function () {
        //    $("#createBooking").click(function () {
        //        $.ajax({
        //            type: "POST", //HTTP POST Method
        //            url: "BookingController/Create", // BookingController/Create
        //            data: { //Passing data
        //                PhoneNo: $("#PhoneNo").val(), //Reading values
        //                StartDate: $("#StartDate").val(),
        //                StartTime: $("#StartTime").val(),
        //                EndTime: $("#EndTime").val(),
        //                GamingStations: JSON.stringify(stations),
        //            }
        //        });

        //    });
        //});

    </script>
}
